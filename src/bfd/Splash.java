/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bfd;

import BD.Conexion;
import java.awt.Color;
import java.awt.Image;
import javax.swing.ImageIcon;


/**
 *
 * @author Usuario
 */
public class Splash extends javax.swing.JFrame implements Runnable {
    
    private Thread tiempo = null;
    

    /**
     * Creates new form Splash
     */
    public Splash() {
        initComponents();
        this.setAlwaysOnTop(true);
        //this.setIconImage(new ImageIcon(getClass().getResource("/images/GIF_AE.gif")).getImage());
        this.setSize(1280, 720);
        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);
        //ImageIcon icono = new ImageIcon(new ImageIcon(getClass().getResource("/images/fondo.png")).getImage().getScaledInstance(800, 340, Image.SCALE_SMOOTH));
        //jLabel2.setIcon(icono);
        ImageIcon icono2 = new ImageIcon(getClass().getResource("/images/gifPNG2.gif"));
        jLabel1.setIcon(icono2);
        jLabel1.setSize(1280, 720);
        jLabel1.setLocation(0, 0);
        tiempo = new Thread(this);
        //Conexion.getInstance();
        tiempo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(230, 120, 0, 0);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 800, 340);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Splash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Splash().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        if (tiempo != null) {
            try {
                Principal p = new Principal();
//                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
//                p.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Thread.sleep(4000);
                p.setVisible(true);

                this.dispose();
//                Thread.sleep(1000);

            } catch (InterruptedException ex) {
                
            }
        }
        
        tiempo = null;
    }
}
